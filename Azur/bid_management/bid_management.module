<?php
define('CONST_PERM_CREATE_BID', 'create bid');
define('CONST_PERM_EDIT_BID', 'edit bid');

/**
 * Implements hook_permission().
 */
function bid_management_permission() {
  return array(
    CONST_PERM_CREATE_BID => array('title' => t('Create Bid')),
    CONST_PERM_EDIT_BID => array('title' => t('Edit Bid')),
  );
}

 function bid_management_menu(){
 	
 $items['add/bid_manage'] = array(
 'title' => 'Bid Management',
 'description' => 'Bid Management',
 'page callback' => 'drupal_get_form',
 'access arguments' => array(TRUE),
 'page arguments' =>array('bid_management_form'),
 'access arguments' => array(CONST_PERM_CREATE_BID),
 'type' => MENU_NORMAL_ITEM,
   );
 $items['bid_manag/%/edit'] = array(
 'title' => t('bid_management edit details'),
 'page callback' => 'drupal_get_form',
 'access arguments'=>TRUE,
 'page arguments'=> array('bid_management_form',1),
 'access arguments' => array(CONST_PERM_CREATE_BID),
 'type'=> MENU_LOCAL_TASK,
   );
  return $items;
 }
  function bid_management_form($form,&$form_state,$bid = 0){
  	$edit=NULL;
	if($bid != 0){
		$query = db_select('bid_management','b');
		$squery -> innerJoin('employee', 'emp', 'emp.eid = b.sales_owner');
		$squery -> innerJoin('employee', 'e', 'e.eid = b.delivery_bid_owner');
		$query -> fields('b',array('prosp_name','opp_desc','value','horizontal','sel_criteria','competition','opp_iss_date','resp_due_date','sales_owner','delivery_bid_owner','win_the','core_team'));
		$query -> condition('b.bid',$bid,'=');
		$edit = $query ->execute() -> fetchObject();
	}
	 $form['industry'] = array(
    '#type' => 'select',
    '#title' => t('Industry'),
    '#options' => industry_type(),
    '#default_value' => isset($edit->industry) ? $edit -> industry : '',
     );
	 $form['industry_others'] = array(
    '#type' => 'textfield',
    '#title' => t('Other Industries'),
    '#maxlength' => '64',
    '#states' => array('visible' => array(':input[name="industry"]' => array('value' => 3),),), 
    '#default_value' => isset($edit->industry_others) ? $edit -> industry_others : '',
     );
  	 $form['prosp_name']=array(
  	'#type' => 'textfield', 
  	 '#title' => t('Prospect Name'),
  	 '#size' =>100,
  	 '#maxlength' =>100,
  	 '#default_value' => isset($edit->prosp_name) ? $edit -> prosp_name : '',
	 );
  	 $form['opp_desc']=array(
  	'#type' => 'textarea', 
  	 '#title' => t('Oppurtunity description'),
  	 '#default_value' => isset($edit->opp_desc) ? $edit -> opp_desc : '',
	 );
  	 $form['value']=array(
  	'#type' => 'textfield', 
  	 '#title' => t('Value'),
  	 '#size' =>100,
  	 '#maxlength' =>100,
  	 '#default_value' => isset($edit->value) ? $edit -> value : '',
	 );
	 $form['horizontal']=array(
  	'#type' => 'select', 
  	 '#title' => t('horizontal'),
  	 '#options' => horizontal_type(),
  	 '#default_value' => isset($edit->horizontal) ? $edit -> horizontal : '',
	 );
	 $form['horiz_other']=array(
  	'#type' => 'textfield', 
  	 '#title' => t('Other horizontal value'),
  	 '#states' => array('visible' => array(':input[name="horizontal"]' => array('value' => 3),),),
  	 '#default_value' => isset($edit->horiz_other) ? $edit -> horiz_other : '',
	 );
	 $form['sel_criteria']=array(
  	'#type' => 'textarea', 
  	 '#title' => t('Selection Criteria'),
  	 '#default_value' => isset($edit->sel_criteria) ? $edit -> sel_criteria : '',
	 );
	 $form['competition']=array(
  	'#type' => 'textarea', 
  	 '#title' => t('Competition'),
  	 '#default_value' => isset($edit->competition) ? $edit -> competition : '',
  	 );
	 $form['opp_iss_date']=array(
  	'#type' => 'date_popup',
    '#date_label_position' => 'within',
    '#title' => t('Opportunity issue date'),
    '#default_value' => isset($edit->opp_iss_date) && !empty($edit -> opp_iss_date) ? date('Y-m-d', $edit -> opp_iss_date) : "",
    '#date_format' => variable_get('date_format_date_only', 'd/m/Y'),
	 );
	 $form['resp_due_date']=array(
  	 '#type' => 'date_popup', 
  	 '#title' => t('Response due date'),
  	 '#date_label_position' => 'within',
    '#default_value' => isset($edit->resp_due_date) && !empty($edit -> resp_due_date) ? date('Y-m-d', $edit -> resp_due_date) : "",
    '#date_format' => variable_get('date_format_date_only', 'd/m/Y'),
	 );
	 $form['sales_owner']=array(
  	'#type' => 'textfield', 
  	 '#title' => t('Sales Owner'),
  	 '#size' =>90,
  	 '#required' => TRUE,
  	 '#default_value' => isset($edit->sales_owner) ? $edit -> sales_owner : '',
  	 '#autocomplete_path' => 'adminid/autocomplete'
	 );
	 $form['delivery_bid_owner']=array(
  	'#type' => 'textfield', 
  	 '#title' => t('Delivery Bid Owner'),
  	 '#size' =>90,
  	 '#required' => TRUE,
  	 '#autocomplete_path' => 'adminid/autocomplete',
  	 '#default_value' => isset($edit->delivery_bid_owner) ? $edit -> delivery_bid_owner : '',
	 );
	 $form['win_the']=array(
  	 '#type' => 'textarea', 
  	 '#title' => t('Win Themes'),
  	 '#default_value' => isset($edit->win_the) ? $edit -> win_the : '',
	 );
	 $form['core_team']=array(
  	'#type' => 'textfield', 
  	 '#title' => t('Core Team'),
  	 '#size' =>100,
  	 '#autocomplete_path' => 'core_team/autocomplete',
  	 '#default_value' => isset($edit->core_team) ? $edit -> core_team : '',
	 );
	 $form['bid']=array(
  	'#type' => 'hidden', 
  	'#value' => $edit,
	 );
	 $form['eid']= array(
	 '#type' => 'hidden', 
  	 '#value' => $edit,
	 );
	 $form['submit']=array(
	 '#type' => 'submit',
	 '#value'=>t('Save')
	 );
	 return $form;

 }
  function bid_management_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'bid_management') . '/views',
  );
}
  function bid_management_form_submit($form,&$form_state){
	$bid = $form_state['values']['bid'];
	$industry = $form_state['values']['industry'];
	$industry_others = $form_state['values']['industry_others'];
	$prosp_name = $form_state['values']['prosp_name'];
    $opp_desc = $form_state['values']['opp_desc'];
    $value = $form_state['values']['value'];
    $horizontal = $form_state['values']['horizontal'];
	$horiz_other = $form_state['values']['horiz_other'];
    $sel_criteria = $form_state['values']['sel_criteria'];
    $competition = $form_state['values']['competition'];
    $opp_iss_date = strtotime($form_state['values']['opp_iss_date']);
    $resp_due_date = strtotime($form_state['values']['resp_due_date']);
    $sales_owner = autocomplete_get_id_func($form_state['values']['sales_owner']);
    $delivery_bid_owner = autocomplete_get_id_func($form_state['values']['delivery_bid_owner']);
    $win_the = $form_state['values']['win_the'];
    $core_team = $form_state['values']['core_team'];
		
  	if ($bid != 0) {
    $updated = db_update('bid_management') -> fields(array(
      'bid'=>$bid,
      'industry'=>$industry,
      'industry_others' => $industry_others,
      'prosp_name' => $prosp_name,
      'opp_desc' =>  $opp_desc,
      'value' => $value,
      'horizontal' => $horizontal,
      'horiz_other'=>$horiz_other,
      'sel_criteria' => $sel_criteria,
      'competition' => $competition,
      'opp_iss_date' => $opp_iss_date,
     // 'resp_due_date' => $resp_due_date,
      'sales_owner'=> $sales_owner,
      'delivery_bid_owner' => $delivery_bid_owner,
      'win_the' => $win_the,
      'core_team' => $core_team,
    )) -> condition('bid', $bid, '=') -> execute();
  }
  else {
    $values = array(
      'bid'=>$bid,
      'industry'=>$industry,
      'industry_others' => $industry_others,
      'prosp_name' => $prosp_name,
      'opp_desc' =>  $opp_desc,
      'value' => $value,
      'horizontal' => $horizontal,
      'horiz_other'=>$horiz_other,
      'sel_criteria' => $sel_criteria,
      'competition' => $competition,
      'opp_iss_date' => $opp_iss_date,
     // 'resp_due_date' => $resp_due_date,
      'sales_owner'=> $sales_owner,
      'delivery_bid_owner' => $delivery_bid_owner,
      'win_the' => $win_the,
      'core_team' => $core_team,
    );
    $bid = db_insert('bid_management') -> fields($values) -> execute();
  }
  }
    
    //Types of Industries
function industry_type($typ = '') {
  static $types;
  if (!isset($types)) {
    $types = array(
      1 => t('IT Software'),
      2 => t('IT Harware'),
      3 => t('Others'),
    );
  }
  if (empty($typ)) {
    return $types;
  }
  elseif (isset($types[$typ])) {
    return $types[$typ];
  }
  else {
    return t('Invalid Option');
  }
}
  //Horizontal types
function horizontal_type($typ = '') {
  static $types;
  if (!isset($types)) {
    $types = array(
      1 => t('Software service'),
      2 => t('Harware service'),
      3 => t('Others'),
    );
  }
  if (empty($typ)) {
    return $types;
  }
  elseif (isset($types[$typ])) {
    return $types[$typ];
  }
  else {
    return t('Invalid Option');
  }
}